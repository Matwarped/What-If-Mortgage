name: Build and Deploy to S3

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '22'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build

    - name: Update GTM ID
      if: ${{ vars.GTM_ID }}
      run: |        
        sed -e "s/GTM_ID/${{ vars.GTM_ID }}/g" dist/index.html
      
    - name: Run tests (if available)
      run: npm test --if-present
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
        
    - name: Deploy to S3
      run: |
        aws s3 sync dist/ s3://${{ vars.S3_BUCKET_NAME }} --delete --cache-control max-age=31536000
        
    - name: Invalidate CloudFront (optional)
      if: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        
    - name: Deployment summary
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "üì¶ Built files synced to S3 bucket: ${{ vars.S3_BUCKET_NAME }}"
        if [[ -n "${{ vars.GTM_ID }}" ]]; then
          echo "üéØ GTM ID updated: ${{ vars.GTM_ID }}"
        fi
        if [[ -n "${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" ]]; then
          echo "üåê CloudFront cache invalidated for distribution: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}"
        fi
